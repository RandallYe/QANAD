// This model is automatically generated from the PRISM model 

// All changes made will be lost after regeneration. 
 
// PRISM Output

ctmc

const int INACTIVE = (-1);
const double mean_duration = (0.1);
const int TM_I0_E1_I0 = (0);
const int TM_I0_E1_findDuration = (1);
const int TM_I0_E1_calculateTime = (2);
const int TM_I0_E1_checkSchedule = (3);
const int TM_I0_E1_F1 = (4);
const int TM_I0_E1_bookParking = (5);
const int TM_I0_E1_registerParking = (6);
const int TM_I0_E1_J1 = (7);
const int TM_F1_E5_makeCall = (0);
const int TM_F1_E5_J1 = (1);
const int TM_F1_E5_requestMeeting = (2);
const int TM_F1_E5_sendSMS = (3);
const int TM_F1_E5_EndWhile = (4);
const int TM_F1_E5_AF = (5);
const double r = (0.97);
const double rewd = (1.0);



formula TM_to_be_terminated = (TM_I0_E1_to_be_terminated)|(TM_F1_E5_to_be_terminated);		
formula TM_to_be_failed = (TM_I0_E1_to_be_failed)|(TM_F1_E5_to_be_failed);		
formula default_rate = ((1.0)/mean_duration);		
		





module TM_F1_E5
    TM_F1_E5_pc : [-1..5] init INACTIVE;
    TM_F1_E5_to_be_terminated : bool init false;
    TM_F1_E5_to_be_failed : bool init false;

    [TM_F1] ((TM_F1_E5_pc=INACTIVE))&(! (TM_to_be_terminated)) -> default_rate:(TM_F1_E5_pc'=TM_F1_E5_makeCall);

    [TM_F1_E5_makeCall] ((TM_F1_E5_pc=TM_F1_E5_makeCall))&(! (TM_to_be_terminated)) -> (((1.0)/(6.0))*(0.99)):(TM_F1_E5_pc'=TM_F1_E5_J1) + (((1.0)/(6.0))*((1.0)-(0.99))):(TM_F1_E5_pc'=INACTIVE)&(TM_F1_E5_to_be_failed'=true)&(TM_F1_E5_to_be_terminated'=true);

    [TM_J1] ((TM_F1_E5_pc=TM_F1_E5_J1))&(! (TM_to_be_terminated)) -> default_rate:(TM_F1_E5_pc'=TM_F1_E5_requestMeeting);

    [TM_F1_E5_requestMeeting] ((TM_F1_E5_pc=TM_F1_E5_requestMeeting))&(! (TM_to_be_terminated)) -> (((1.0)/(1.2))*r):(TM_F1_E5_pc'=TM_F1_E5_sendSMS) + (((1.0)/(1.2))*((1.0)-r)):(TM_F1_E5_pc'=INACTIVE)&(TM_F1_E5_to_be_failed'=true)&(TM_F1_E5_to_be_terminated'=true);

    [TM_F1_E5_sendSMS] ((TM_F1_E5_pc=TM_F1_E5_sendSMS))&(! (TM_to_be_terminated)) -> (((1.0)/(3.0))*((1.0)-(0.99))):(TM_F1_E5_pc'=INACTIVE)&(TM_F1_E5_to_be_failed'=true)&(TM_F1_E5_to_be_terminated'=true) + (((1.0)/(3.0))*(0.99)):(TM_F1_E5_pc'=TM_F1_E5_EndWhile);

    [TM_F1_E5_EndWhile] ((TM_F1_E5_pc=TM_F1_E5_EndWhile))&(! (TM_to_be_terminated)) -> ((1.0)/(1.0)):(TM_F1_E5_pc'=TM_F1_E5_AF)&(TM_F1_E5_to_be_terminated'=true);

    [TM_terminate] TM_to_be_terminated -> default_rate:(TM_F1_E5_pc'=INACTIVE)&(TM_F1_E5_to_be_terminated'=false);

    [TM_terminate] TM_to_be_terminated -> default_rate:(TM_F1_E5_pc'=INACTIVE)&(TM_F1_E5_to_be_terminated'=false);

endmodule

module TM_I0_E1
    TM_I0_E1_pc : [-1..7] init 0;
    TM_I0_E1_to_be_terminated : bool init false;
    TM_I0_E1_to_be_failed : bool init false;
    TM_terminated : bool init false;

    [TM_I0_E1_I0] ((TM_I0_E1_pc=TM_I0_E1_I0))&(! (TM_to_be_terminated)) -> default_rate:(TM_I0_E1_pc'=TM_I0_E1_findDuration);

    [TM_I0_E1_findDuration] ((TM_I0_E1_pc=TM_I0_E1_findDuration))&(! (TM_to_be_terminated)) -> (((1.0)/(0.8))*((1.0)-(0.96))):(TM_I0_E1_pc'=INACTIVE)&(TM_I0_E1_to_be_failed'=true)&(TM_I0_E1_to_be_terminated'=true) + (((1.0)/(0.8))*(0.96)):(TM_I0_E1_pc'=TM_I0_E1_calculateTime);

    [TM_I0_E1_calculateTime] ((TM_I0_E1_pc=TM_I0_E1_calculateTime))&(! (TM_to_be_terminated)) -> (((1.0)/(1.0))*(0.98)):(TM_I0_E1_pc'=TM_I0_E1_checkSchedule) + (((1.0)/(1.0))*((1.0)-(0.98))):(TM_I0_E1_pc'=INACTIVE)&(TM_I0_E1_to_be_failed'=true)&(TM_I0_E1_to_be_terminated'=true);

    [TM_I0_E1_checkSchedule] ((TM_I0_E1_pc=TM_I0_E1_checkSchedule))&(! (TM_to_be_terminated)) -> (((1.0)/(1.8))*((1.0)-(0.98))):(TM_I0_E1_pc'=INACTIVE)&(TM_I0_E1_to_be_failed'=true)&(TM_I0_E1_to_be_terminated'=true) + (((1.0)/(1.8))*(0.98)):(TM_I0_E1_pc'=TM_I0_E1_F1);

    [TM_F1] ((TM_I0_E1_pc=TM_I0_E1_F1))&(! (TM_to_be_terminated)) -> default_rate:(TM_I0_E1_pc'=TM_I0_E1_bookParking);

    [TM_I0_E1_bookParking] ((TM_I0_E1_pc=TM_I0_E1_bookParking))&(! (TM_to_be_terminated)) -> (((1.0)/(3.0))*(0.95)):(TM_I0_E1_pc'=TM_I0_E1_registerParking) + (((1.0)/(3.0))*((1.0)-(0.95))):(TM_I0_E1_pc'=INACTIVE)&(TM_I0_E1_to_be_failed'=true)&(TM_I0_E1_to_be_terminated'=true);

    [TM_I0_E1_registerParking] ((TM_I0_E1_pc=TM_I0_E1_registerParking))&(! (TM_to_be_terminated)) -> (((1.0)/(3.0))*(0.95)):(TM_I0_E1_pc'=TM_I0_E1_J1) + (((1.0)/(3.0))*((1.0)-(0.95))):(TM_I0_E1_pc'=INACTIVE)&(TM_I0_E1_to_be_failed'=true)&(TM_I0_E1_to_be_terminated'=true);

    [TM_J1] ((TM_I0_E1_pc=TM_I0_E1_J1))&(! (TM_to_be_terminated)) -> default_rate:(TM_I0_E1_pc'=INACTIVE);

    [TM_terminate] (TM_to_be_terminated)&(! (TM_terminated)) -> default_rate:(TM_I0_E1_pc'=INACTIVE)&(TM_terminated'=true);

    [] ((TM_I0_E1_pc=INACTIVE))&((TM_terminated)&(! (TM_to_be_terminated))) -> default_rate:true;

endmodule


